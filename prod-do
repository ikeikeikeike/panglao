#!/bin/bash -eu
VERSION=`cat VERSION`

USER=`cat USER`
BUILDING=`cat BUILDING`
PRODUCTION=`cat PRODUCTION`
INNER1=`cat INNER1`

deploy() {
    build
    download $VERSION
    upload
    upgrade $VERSION
    restartsrv
    echo;deployed
}

before_deploy() {
    build
    download $VERSION
    upload
}

version() {
    echo $VERSION
}

fixversion() {
    set +e
    hg commit -m "fix version $VERSION" mix.exs VERSION
    hg push
    set -e
}

build() {
    fixversion

    ssh ${USER}@${BUILDING} "rm -rf src/panglao/priv/static/css/*"
    ssh ${USER}@${BUILDING} "rm -rf src/panglao/priv/static/js/*"
    ssh ${USER}@${BUILDING} "cd src/panglao && bash build"
}

download() {
    rsync -avr --stats ${USER}@${BUILDING}:~/src/panglao/_build/prod/rel _build/prod

    (cd _build/prod/rel/panglao
        rm -rf  static
        ln -fs lib/panglao-${VERSION}/priv/static
    )
}

upload() {
    # upload staging
    # rsync -avr --stats _build/prod/rel ${USER}@${PRODUCTION}:~/
    scp _build/prod/rel/panglao/releases/${VERSION}/panglao.tar.gz ${USER}@${PRODUCTION}:~/rel/
    scp _build/prod/rel/panglao/releases/${VERSION}/panglao.tar.gz ${USER}@${INNER1}:~/rel/
}

upgrade() {
    # upgrade
    ssh ${USER}@${PRODUCTION} "(cd src/panglao; hg pull ; hg up -C)"
    ssh ${USER}@${PRODUCTION} "(cd rel && tar zxf panglao.tar.gz && ln -fns lib/panglao-${VERSION}/priv/static)"
    # ssh ${USER}@${PRODUCTION} "sh rel/bin/panglao upgrade ${VERSION}"

    ssh ${USER}@${INNER1} "(cd src/panglao; hg pull ; hg up -C)"
    ssh ${USER}@${INNER1} "(cd rel && tar zxf panglao.tar.gz && ln -fns lib/panglao-${VERSION}/priv/static)"
}

restartsrv() {
    set +e

    ssh ${USER}@${INNER1} "sh rel/bin/panglao restart"
    ssh ${USER}@${PRODUCTION} "sh rel/bin/panglao restart"

    #OUT=`ssh ${USER}@${PRODUCTION} "ps aux | grep '/rel/bin/panglao' | grep -v 'grep'"`
    #echo;echo "PRODUCTION OUT: $OUT"
    #ssh ${USER}@${PRODUCTION} "sudo systemctl restart phoenix"
    #ssh ${USER}@${PRODUCTION} "sudo systemctl start phoenix"
    #ssh ${USER}@${PRODUCTION} "sudo systemctl start phoenix"
    #ssh ${USER}@${PRODUCTION} "sudo systemctl start phoenix"
    #OUT=`ssh ${USER}@${PRODUCTION} "ps aux | grep '/rel/bin/panglao' | grep -v 'grep'"`
    #echo "PRODUCTION OUT: $OUT"

    set -e
}

remove() {
    rm -fr _build/prod/rel/panglao/lib/panglao-$1
    rm -fr _build/prod/rel/panglao/releases/$1

    rsync -avr --delete --stats _build/prod/rel/panglao/lib      ${USER}@${BUILDING}:~/src/panglao/_build/prod/rel/panglao/
    rsync -avr --delete --stats _build/prod/rel/panglao/releases ${USER}@${BUILDING}:~/src/panglao/_build/prod/rel/panglao/
    # rsync -avr --delete --stats _build/prod/rel/panglao/lib      ${USER}@${PRODUCTION}:~/rel/panglao/
    # rsync -avr --delete --stats _build/prod/rel/panglao/releases ${USER}@${PRODUCTION}:~/rel/panglao/

    ssh ${USER}@${PRODUCTION} "find ~/rel | grep 'releases\|panglao' | grep $1 | xargs rm -rf"
    ssh ${USER}@${INNER1}     "find ~/rel | grep 'releases\|panglao' | grep $1 | xargs rm -rf"
}

deployed() {
    # upgrade
    echo "PRODUCTION"
    ssh ${USER}@${PRODUCTION} "ls -t rel/releases"
    echo "INNER1"
    ssh ${USER}@${INNER1}     "ls -t rel/releases"
}

case "$1" in
    deploy)             deploy            ;;
    before_deploy)      before_deploy     ;;
    version)            version           ;;
    fixversion)         fixversion        ;;
    build)              build             ;;
    upload)             upload            ;;
    download)           download          ;;
    upgrade)            upgrade           ;;
    deployed)           deployed          ;;
    remove)             remove $2         ;;
    restart)            restartsrv        ;;
    *) echo "
Usage:
    $0 <command> [options]

Commands:
    deploy                    Deployment all
    before_deploy             Deploy until before upgrade
    version                   Get package version.
    fixversion <version>      Fix package version.
    build      [options]      Build packages.
    upload                    UploadDeplo packages.
    download                  Download rel.
    upgrade                   Upload rel.
    deployed                  Deployed versions.
    remove                    Removing before versions.
    restart                   Restarting servers

" >&2
       exit 1
       ;;
esac
